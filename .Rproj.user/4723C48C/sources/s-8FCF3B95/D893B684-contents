#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(shinydashboard)
library(tidyquant)
library(lubridate)
library(stringr)

## Only run this example in interactive R sessions

# Basic dashboard page template
library(shiny)
shinyApp(
  
  ui = dashboardPage(
    dashboardHeader(title = 'tidyquant'),
    dashboardSidebar(collapsed = FALSE,
                     selectInput(
                       "data_type", 
                       "Select Data",
                       c("Stock Prices", 
                         "Stock Prices Japan",
                         "Financials",
                         "Key Stats",
                         "Key Ratios",
                         "Dividends",
                         "Splits",
                         "Economic Data",
                         "Exchange Rates",
                         "Metal Prices",
                         "Quandl",
                         "Quandl Datatable")
                     )

    ),
    dashboardBody(
      tabsetPanel(
        tabPanel(
          "Gather Data",
          conditionalPanel(
            condition = "input.data_type == 'Stock Prices'",
            textInput("tickers", "Tickers", value = "AAPL, AMZN"),
            # In ui.R:
            downloadLink('downloadData', 'Download'),
            dataTableOutput('dataset')
          )
        )
      )
    ),
    title = "tidyquant"
    
  ),
  
  server = function(input, output) { 
    
    stock_data = reactive({
      query = input$tickers %>% 
        str_split(.,",") %>% 
        unlist %>% 
        str_trim %>% 
        as.vector
      
      tq_get(
        query, 
        get = 'stock.prices'
      )
    })
    
    output$dataset = renderDataTable({
      stock_data() 
    })
  
    # In server.R:
    output$downloadData <- downloadHandler(
      filename = function() {
        paste('data-', Sys.Date(), '.csv', sep='')
      },
      content = function(con) {
        write.csv(stock_data(), con)
      }
    )
  }
  
)

